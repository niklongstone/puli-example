<?php

namespace Puli;

use Puli\Discovery\Api\ResourceDiscovery;
use Puli\Discovery\KeyValueStoreDiscovery;
use Puli\Manager\Api\Server\ServerCollection;
use Puli\Repository\Api\ResourceRepository;
use Puli\Repository\FilesystemRepository;
use Puli\UrlGenerator\Api\UrlGenerator;
use Puli\UrlGenerator\DiscoveryUrlGenerator;
use RuntimeException;
use Webmozart\KeyValueStore\JsonFileStore;

/**
 * Creates Puli's core services.
 *
 * This class was auto-generated by Puli.
 *
 * IMPORTANT: Before modifying the code below, set the "factory.auto-generate"
 * configuration key to false:
 *
 *     $ puli config factory.auto-generate false
 *
 * Otherwise any modifications will be overwritten!
 */
class GeneratedPuliFactory
{
    /**
     * Creates the resource repository.
     *
     * @return ResourceRepository The created resource repository.
     */
    public function createRepository()
    {
        if (!interface_exists('Puli\Repository\Api\ResourceRepository')) {
            throw new RuntimeException('Please install puli/repository to create ResourceRepository instances.');
        }

        if (!file_exists(__DIR__.'/repository')) {
            mkdir(__DIR__.'/repository', 0777, true);
        }

        $repo = new FilesystemRepository(__DIR__.'/repository', true);

        return $repo;
    }

    /**
     * Creates the resource discovery.
     *
     * @param ResourceRepository $repo The resource repository to read from.
     *
     * @return ResourceDiscovery The created resource discovery.
     */
    public function createDiscovery(ResourceRepository $repo)
    {
        if (!interface_exists('Puli\Discovery\Api\ResourceDiscovery')) {
            throw new RuntimeException('Please install puli/discovery to create ResourceDiscovery instances.');
        }

        $store = new JsonFileStore(__DIR__.'/bindings.json', true);
        $discovery = new KeyValueStoreDiscovery($repo, $store);

        return $discovery;
    }

    /**
     * Creates the URL generator.
     *
     * @param ResourceDiscovery $discovery The resource discovery to read from.
     *
     * @return UrlGenerator The created URL generator.
     */
    public function createUrlGenerator(ResourceDiscovery $discovery)
    {
        if (!interface_exists('Puli\UrlGenerator\Api\UrlGenerator')) {
            throw new RuntimeException('Please install puli/url-generator to create UrlGenerator instances.');
        }

        $generator = new DiscoveryUrlGenerator($discovery, array());

        return $generator;
    }
}
